server {
  # don't forget to tell on which port this server listens
  listen 80;

  # listen on the www host
  server_name ~^(www\.)(?<domain>.+)$;

  # and redirect to the non-www host (declared below)
  return 301 $scheme://$domain$request_uri;
}

# Map domains to folders
map $domain $folder {
  ~^(?<domain_name>[^.]+)\..+$ $domain_name;
}

# Map time to year, month and day
map $time_iso8601 $year {
    default '0000';
    "~^(\d{4})-(\d{2})-(\d{2})" $1;
}
map $time_iso8601 $month {
    default '00';
    "~^(\d{4})-(\d{2})-(\d{2})" $2;
}
map $time_iso8601 $day {
    default '00';
    "~^(\d{4})-(\d{2})-(\d{2})" $3;
}

# Nginx Dynamic Hosts
server {

  listen 80;
  listen [::]:80;

  # catch all non-www domains
  server_name ~(?<domain>.+)$;

  root /var/www/$folder/public/;
  access_log /var/www/$folder/storage/logs/access-$year-$month-$day.log;

  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-Content-Type-Options "nosniff";
 
  index index.php;
 
  charset utf-8;

  location / {
    try_files $uri $uri/ /index.php?$query_string;
  }
 
  location = /favicon.ico { access_log off; log_not_found off; }
  location = /robots.txt  { access_log off; log_not_found off; }
 
  error_page 404 /index.php;

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+?\.php)(/.*)$;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_pass app:9000;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_hide_header X-Powered-By;
  }

  location ~ /\.(?!well-known).* {
    deny all;
  }
}

# Minio reverse proxy
server {
  listen       80;
  listen  [::]:80;
  server_name  minio.localhost;

  # Allow special characters in headers
  ignore_invalid_headers off;
  # Allow any size file to be uploaded.
  # Set to a value such as 1000m; to restrict file size to a specific value
  client_max_body_size 0;
  # Disable buffering
  proxy_buffering off;
  proxy_request_buffering off;

  location / {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_connect_timeout 300;
    # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    chunked_transfer_encoding off;

    proxy_pass http://minio:9000;
  }

  location /ui/ {
    rewrite ^/ui/(.*) /$1 break;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-NginX-Proxy true;

    # This is necessary to pass the correct IP to be hashed
    real_ip_header X-Real-IP;

    proxy_connect_timeout 300;

    # To support websockets in MinIO versions released after January 2023
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress)
    # Uncomment the following line to set the Origin request to an empty string
    # proxy_set_header Origin '';

    chunked_transfer_encoding off;

    proxy_pass http://minio:9001;
  }

}

# Mailpit reverse proxy
server {
  listen       80;
  listen  [::]:80;
  server_name  mailpit.localhost;

  location / {
    proxy_pass http://mailpit:8025; # internal Mailpit address

    # configure the websocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
}

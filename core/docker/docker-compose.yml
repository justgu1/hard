services:
  nginx:
    container_name: nginx
    restart: unless-stopped
    build:
      args:
        USER: ${USER}
        UID: ${USER_ID}
        GROUP: ${USER}
        GID: ${USER_ID}
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - "${WWW_PATH}:/var/www"
    depends_on:
      - app
      - mariadb
      - redis
      - minio
      - mailpit
    networks:
      - hard

  app:
    image: app
    container_name: app
    restart: unless-stopped
    build:
      args:
        USER: ${USER}
        UID: ${USER_ID}
        GROUP: ${USER}
        GID: ${USER_ID}
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    ports:
      - "5173-5180:5173-5180"
    volumes:
      - ./docker/php-fpm/php.ini:/usr/local/etc/php/php.ini
      - "${WWW_PATH}:/var/www"
    depends_on:
      - mariadb
      - redis
      - minio
      - mailpit
    networks:
      - hard

  queue:
    image: app
    container_name: queue
    restart: unless-stopped
    volumes:
      - "${WWW_PATH}:/var/www"
    depends_on:
      - mariadb
      - redis
      - minio
      - mailpit
    networks:
      - hard
    command: |
      bash -c "sleep 5; ls | parallel --line-buffer '
        php {}/artisan "${QUEUE_COMMAND}" >> /var/www/{}/storage/logs/queue-$(date +%F).log
      '"

  scheduler:
    image: app
    container_name: scheduler
    restart: unless-stopped
    volumes:
      - "${WWW_PATH}:/var/www"
    depends_on:
      - mariadb
      - redis
      - minio
      - mailpit
    networks:
      - hard
    command: |
      bash -c "ls | parallel --line-buffer '
      sleep 5
      while [ true ]
      do
        php {}/artisan schedule:run --verbose --no-interaction &
        sleep 60
      done'"

  mariadb:
    image: mariadb
    container_name: mariadb
    ports:
      - "3306:3306"
    restart: unless-stopped
    volumes:
      - "mariadb_data:/var/lib/mysql"
    environment:
      MARIADB_ROOT_PASSWORD: "${DB_PASSWORD}"
      MARIADB_ROOT_HOST: "%"
      MARIADB_USER: "${DB_USERNAME}"
      MARIADB_PASSWORD: "${DB_PASSWORD}"
      MARIADB_ALLOW_EMPTY_PASSWORD: 1
    networks:
      - hard
    healthcheck:
      interval: 30s
      retries: 3
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
      timeout: 30s

  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    volumes:
      - "redis_data:/data"
    ports:
      - "6379:6379"
    networks:
      - hard

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped
    volumes:
      - "minio_data:/data"
    environment:
      MINIO_ROOT_USER: "${AWS_ACCESS_KEY_ID}"
      MINIO_ROOT_PASSWORD: "${AWS_SECRET_ACCESS_KEY}"
      MINIO_BROWSER_REDIRECT_URL: http://minio.localhost/ui
    command: server --console-address ":9001" /data
    networks:
      - hard

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    restart: unless-stopped
    volumes:
      - "mailpit_data:/data"
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - hard

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  mailpit_data:
    driver: local

networks:
  hard:
    driver: bridge
